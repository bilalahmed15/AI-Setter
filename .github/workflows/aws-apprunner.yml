name: AWS App Runner CD

on:
  push:
    branches:
      - main

env:
<<<<<<< HEAD
  AWS_REGION: us-east-1
=======
  AWS_REGION: eu-west-1
>>>>>>> 0e843a8ee52c56839d3188fe2d9aff95e3d9df98
  ECR_REPOSITORY: whisper-transcription
  IMAGE_TAG: latest

jobs:
  deploy:
    name: Deploy to AWS App Runner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
<<<<<<< HEAD
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
=======
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
>>>>>>> 0e843a8ee52c56839d3188fe2d9aff95e3d9df98
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
<<<<<<< HEAD
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to App Runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: whisper-transcription-service
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          access-role-arn: ${{ secrets.APPRUNNER_SERVICE_ROLE_ARN }}
          region: ${{ env.AWS_REGION }}
          cpu: 2
          memory: 4096
          port: 5000
          wait-for-service-stability: true
          environment-variables: |
            MALLOC_TRIM_THRESHOLD_=100000
            MALLOC_MMAP_THRESHOLD_=100000
            OMP_NUM_THREADS=1
            MKL_NUM_THREADS=1
            NUMEXPR_NUM_THREADS=1 
=======
          ECR_REPOSITORY: aissetter
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
>>>>>>> 0e843a8ee52c56839d3188fe2d9aff95e3d9df98
